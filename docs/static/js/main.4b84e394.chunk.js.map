{"version":3,"sources":["componentes/AddCategory.js","componentes/GifGridItem.js","componentes/helpers/getGifs.js","componentes/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","setImages","useEffect","then","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAST,EACTU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,YCNnBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAMA,EAAN,O,uBCRCK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAXtB,kBAgBZY,GAhBY,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,EAETrB,mBAAS,IAFA,mBAE9B+B,EAF8B,KAEtBG,EAFsB,KASrC,OALAC,qBAAU,WACNf,EAASC,GACJe,KAAMF,KACZ,CAAEb,IAID,oCACI,gCAAOA,EAAP,KACA,yBAAKJ,UAAU,aAELc,EAAOF,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,eACIO,IAAKP,EAAIhB,IACLgB,UClBnBQ,EAAe,WAAO,IAAD,EAEMtC,mBAAS,CAAC,YAFhB,mBAEvBuC,EAFuB,KAEXxC,EAFW,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQwC,EAAWV,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACIgB,IAAMhB,EACNA,SAAWA,UCbvCmB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4b84e394.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        \n        if( inputValue.trim().length > 2){\n            setCategories( categ => [ inputValue, ...categ ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit= { handleSubmit }>\n            <input \n                type='text'\n                value= { inputValue }\n                onChange= { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    // console.log(id, title, url);\n    \n    return (\n        <div className='card animate__animated animate__backInDown'>\n            <img src={url} alt={title} />\n            <p> { title } </p>\n        </div>\n    )\n}\n","\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=d2DXI1G20WF5PaYRZh4JQ4Zz18cj0WJa`\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n\n    })\n\n    return gifs;\n}","import React, { useEffect, useState } from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { getGifs } from './helpers/getGifs'\n\nexport const GifGrid = ({ category }) => {\n\n    const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        getGifs( category )\n            .then( setImages );\n    }, [ category ])\n\n    return (\n\n        <>\n            <h3> { category } </h3>\n            <div className='card-grid'>\n                \n                    { images.map((img) =>\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    )}\n                \n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './componentes/AddCategory';\nimport { GifGrid } from './componentes/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Minions']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories= { setCategories } />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid \n                            key={ category }\n                            category={ category } \n                        />)\n                }\n            </ol>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}